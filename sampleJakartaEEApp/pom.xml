<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>com.mindscapehq</groupId>
        <artifactId>raygun4java</artifactId>
        <version>4.0.0</version>
    </parent>
    <artifactId>sampleJakartaEEApp</artifactId>
    <packaging>war</packaging>

    <name>sampleJakartaEEApp</name>
    <url>http://raygun.io</url>
    <licenses>
        <license>
            <name>The MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution />
        </license>
    </licenses>
    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    </properties>
    <description>The official provider for the Raygun error tracking service. This is an example JakartaEE project, using
        raygun4java.core and webprovider.
    </description>
    <dependencies>
        <dependency>
            <groupId>jakarta.platform</groupId>
            <artifactId>jakarta.jakartaee-api</artifactId>
            <version>10.0.0</version>
            <scope>provided</scope>
        </dependency>

        <dependency>
            <groupId>com.mindscapehq</groupId>
            <artifactId>core</artifactId>
        </dependency>
        <dependency>
            <groupId>com.mindscapehq</groupId>
            <artifactId>webproviderjakarta</artifactId>
        </dependency>

        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>5.9.3</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-engine</artifactId>
            <version>5.9.3</version>
            <scope>test</scope>
        </dependency>

        <!-- OkHttp -->
        <dependency>
            <groupId>com.squareup.okhttp3</groupId>
            <artifactId>okhttp</artifactId>
            <version>4.11.0</version>
            <scope>test</scope>
        </dependency>

    </dependencies>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>com.mindscapehq</groupId>
                <artifactId>core</artifactId>
                <version>${project.parent.version}</version>
            </dependency>
            <dependency>
                <groupId>com.mindscapehq</groupId>
                <artifactId>webproviderjakarta</artifactId>
                <version>${project.parent.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <build>

        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>3.1.2</version>
            </plugin>


            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-failsafe-plugin</artifactId>
                <version>3.1.2</version>
                <configuration>
                    <includes>
                        <include>**/*IT.java</include>
                    </includes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.1.0</version>
                <executions>
                    <execution>
                        <id>create-marker-file</id>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <mkdir dir="${project.build.directory}/deployments" />
                                <!-- Copy the .war file -->
                                <copy file="${project.build.directory}/${project.build.finalName}.war"
                                      tofile="${project.build.directory}/deployments/${project.artifactId}.war" />
                                <!-- Create the .dodeploy file -->
                                <touch file="${project.build.directory}/deployments/${project.artifactId}.war.dodeploy" />
                            </target>

                        </configuration>
                    </execution>
                </executions>
            </plugin>


            <plugin>
                <groupId>io.fabric8</groupId>
                <artifactId>docker-maven-plugin</artifactId>
                <version>0.43.0</version>
                <configuration>
                    <images>
                        <image>
                            <alias>wildfly</alias>
                            <name>quay.io/wildfly/wildfly:27.0.0.Final-jdk11</name>
                            <run>
                                <ports>
                                    <port>8080:8080</port>
                                </ports>
                                <wait>
                                    <http>
                                        <url>http://localhost:8080</url>
                                        <method>GET</method>
                                        <status>200</status>
                                    </http>
                                    <time>30000</time>
                                </wait>
                                <volumes>
                                    <bind>
                                        <volume>${project.build.directory}/deployments:/opt/jboss/wildfly/standalone/deployments</volume>
                                    </bind>
                                </volumes>
                                <log>
                                    <prefix>WFLY</prefix>
                                    <date>default</date>
                                </log>
                            </run>
                        </image>
                    </images>
                </configuration>
                <executions>
                    <execution>
                        <id>start</id>
                        <phase>pre-integration-test</phase>
                        <goals>
                            <goal>start</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>stop</id>
                        <phase>post-integration-test</phase>
                        <goals>
                            <goal>stop</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>


        </plugins>
    </build>

</project>
